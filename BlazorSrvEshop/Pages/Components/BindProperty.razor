@page "/Components/BindProperty"
@using SrvEShopModels.SrvModels
<div class="row">

    <div class="col-6 border p-3">
        <h3>Product Settings</h3><hr />
        Active : <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive?"Checked":null)" />
        <br />
        Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" />
        <br />
        Product Properties:
        <select @bind="selectedProp">
            @foreach (var item in Product.ProductProperties)
            {
                <option value="@item.Key">@item.Key</option>
            }

        </select>
    </div>
    <div class="col-6 border p-3">

        <h3>Product Summery</h3><hr />
        Name:@Product.Name<br />
        Active:@Product.IsActive<br />
        Price:@Product.Price<br />
        Product: @(Product.IsActive ? "Available" : "Unavailable")<br /><br />

        Product Selected: @selectedProp


        @if (!String.IsNullOrEmpty(selectedProp))
        {
            @* <p>Property Value: @Product.productProperties.Where(p=> p.Key==selectedProperty).Select(s=>s.Value) </p>*@
            string? prodPropertyValue = Product.ProductProperties.Where(p => p.Key == selectedProp).Select(s => s.Value).FirstOrDefault();

            //null referance
            @*<p>Property Value: @Product.productProperties.FirstOrDefault(p=> p.Key==selectedProperty).Value.ToString() </p>*@

            @if (prodPropertyValue != null)
            {
                <p>Property Value: @prodPropertyValue </p>
            }

        }
    </div>

    <div class="col-12 pt-4">
        <h3>Product Table</h3>
        <table class="table table-striped">
            <tbody>
                @foreach (var prd in Products)
                {
                    <tr>
                        <td>

                            <input type="text" @bind-value="prd.Name" @bind-value:event="oninput" />
                        </td>
                        <td>

                            <input type="number" @bind-value="prd.Price" @bind-value:event="oninput" />
                        </td>
                        <td>

                            <input type="checkbox" @bind-value="prd.IsActive" checked="@(prd.IsActive?"checked":null)" />
                        </td>

                    </tr>
                }

            </tbody>


        </table>

        <h2>Product Summery</h2>

        @foreach (var prd in Products)
        {
            <p>  @prd.Name [@prd.Price] is @(prd.IsActive ? "Active" : "InActive") </p>
        }

    </div>


</div>

@code {

    private string selectedProp = "";

    Product Product = new()
        {
            Id = 1,
            Name = "Nike 3500",
            IsActive = true,
            Price = 12.99M,
            ProductProperties = new List<ProductProperties>()
            {
                new ProductProperties{Id =1 , Key="Colour", Value="Yello"},
                new ProductProperties{Id=2, Key="Flavor", Value="Mango"},
                new ProductProperties{Id=3, Key="Size" ,Value="20oz"}

            }

        };

    ICollection<Product> Products = new List<Product>();
    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 13.99M,
                ProductProperties = new()
                {
                    new ProductProperties { Id = 1, Key = "Flavor", Value = "Rose"},
                    new ProductProperties { Id = 2, Key = "Size", Value = "20oz"},
                    new ProductProperties { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 17.99M,
                ProductProperties = new()
            {
                new ProductProperties { Id = 1, Key = "Flavor", Value = "Lily" },
                new ProductProperties { Id = 2, Key = "Size", Value = "18oz" },
                new ProductProperties {Id = 3,Key = "Color",Value = "White"}
            }
            });


        base.OnInitialized();
    }
}
